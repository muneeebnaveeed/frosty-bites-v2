/*!
 * metismenu https://github.com/onokumus/metismenu#readme
 * A jQuery menu plugin
 * @version 3.0.3
 * @author Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)
 * @license: MIT
 */
!(function (e, n) {
   typeof exports === 'object' && typeof module !== 'undefined'
      ? (module.exports = n(require('jquery')))
      : typeof define === 'function' && define.amd
      ? define(['jquery'], n)
      : (e.metisMenu = n(e.jQuery));
})(this, function (o) {
   function a(r) {
      for (let e = 1; e < arguments.length; e++) {
         var a = arguments[e] != null ? arguments[e] : {};
         let n = Object.keys(a);
         typeof Object.getOwnPropertySymbols === 'function' &&
            (n = n.concat(
               Object.getOwnPropertySymbols(a).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(a, e).enumerable;
               })
            )),
            n.forEach(function (e) {
               let n;
               let t;
               let i;
               (n = r),
                  (i = a[(t = e)]),
                  t in n
                     ? Object.defineProperty(n, t, { value: i, enumerable: !0, configurable: !0, writable: !0 })
                     : (n[t] = i);
            });
      }
      return r;
   }
   const s = (function (i) {
      const n = 'transitionend';
      const r = {
         TRANSITION_END: 'mmTransitionEnd',
         triggerTransitionEnd(e) {
            i(e).trigger(n);
         },
         supportsTransitionEnd() {
            return Boolean(n);
         },
      };
      function e(e) {
         const n = this;
         let t = !1;
         return (
            i(this).one(r.TRANSITION_END, function () {
               t = !0;
            }),
            setTimeout(function () {
               t || r.triggerTransitionEnd(n);
            }, e),
            this
         );
      }
      return (
         (i.fn.mmEmulateTransitionEnd = e),
         (i.event.special[r.TRANSITION_END] = {
            bindType: n,
            delegateType: n,
            handle(e) {
               if (i(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
            },
         }),
         r
      );
   })((o = o && o.hasOwnProperty('default') ? o.default : o));
   const e = 'metisMenu';
   const g = 'metisMenu';
   const n = `.${g}`;
   const t = o.fn[e];
   const l = { toggle: !0, preventDefault: !0, triggerElement: 'a', parentTrigger: 'li', subMenu: 'ul' };
   const u = {
      SHOW: `show${n}`,
      SHOWN: `shown${n}`,
      HIDE: `hide${n}`,
      HIDDEN: `hidden${n}`,
      CLICK_DATA_API: `click${n}.data-api`,
   };
   const i = 'metismenu';
   const f = 'mm-active';
   const h = 'mm-show';
   const d = 'mm-collapse';
   const c = 'mm-collapsing';
   const r = (function () {
      function r(e, n) {
         (this.element = e), (this.config = a({}, l, n)), (this.transitioning = null), this.init();
      }
      const e = r.prototype;
      return (
         (e.init = function () {
            const a = this;
            const s = this.config;
            o(this.element).addClass(i),
               o(this.element).find(`${s.parentTrigger}.${f}`).children(s.triggerElement).attr('aria-expanded', 'true'),
               o(this.element).find(`${s.parentTrigger}.${f}`).parents(s.parentTrigger).addClass(f),
               o(this.element)
                  .find(`${s.parentTrigger}.${f}`)
                  .parents(s.parentTrigger)
                  .children(s.triggerElement)
                  .attr('aria-expanded', 'true'),
               o(this.element).find(`${s.parentTrigger}.${f}`).has(s.subMenu).children(s.subMenu).addClass(`${d} ${h}`),
               o(this.element).find(s.parentTrigger).not(`.${f}`).has(s.subMenu).children(s.subMenu).addClass(d),
               o(this.element)
                  .find(s.parentTrigger)
                  .has(s.subMenu)
                  .children(s.triggerElement)
                  .on(u.CLICK_DATA_API, function (e) {
                     const n = o(this);
                     const t = n.parent(s.parentTrigger);
                     const i = t.siblings(s.parentTrigger).children(s.triggerElement);
                     const r = t.children(s.subMenu);
                     s.preventDefault && e.preventDefault(),
                        n.attr('aria-disabled') !== 'true' &&
                           (t.hasClass(f)
                              ? (n.attr('aria-expanded', 'false'), a.hide(r))
                              : (a.show(r),
                                n.attr('aria-expanded', 'true'),
                                s.toggle && i.attr('aria-expanded', 'false')),
                           s.onTransitionStart && s.onTransitionStart(e));
                  });
         }),
         (e.show = function (e) {
            const n = this;
            if (!this.transitioning && !o(e).hasClass(c)) {
               const t = o(e);
               const i = o.Event(u.SHOW);
               if ((t.trigger(i), !i.isDefaultPrevented())) {
                  if ((t.parent(this.config.parentTrigger).addClass(f), this.config.toggle)) {
                     const r = t.parent(this.config.parentTrigger).siblings().children(`${this.config.subMenu}.${h}`);
                     this.hide(r);
                  }
                  t.removeClass(d).addClass(c).height(0), this.setTransitioning(!0);
                  t.height(e[0].scrollHeight)
                     .one(s.TRANSITION_END, function () {
                        n.config &&
                           n.element &&
                           (t.removeClass(c).addClass(`${d} ${h}`).height(''),
                           n.setTransitioning(!1),
                           t.trigger(u.SHOWN));
                     })
                     .mmEmulateTransitionEnd(350);
               }
            }
         }),
         (e.hide = function (e) {
            const n = this;
            if (!this.transitioning && o(e).hasClass(h)) {
               const t = o(e);
               const i = o.Event(u.HIDE);
               if ((t.trigger(i), !i.isDefaultPrevented())) {
                  t.parent(this.config.parentTrigger).removeClass(f),
                     t.height(t.height())[0].offsetHeight,
                     t.addClass(c).removeClass(d).removeClass(h),
                     this.setTransitioning(!0);
                  const r = function () {
                     n.config &&
                        n.element &&
                        (n.transitioning && n.config.onTransitionEnd && n.config.onTransitionEnd(),
                        n.setTransitioning(!1),
                        t.trigger(u.HIDDEN),
                        t.removeClass(c).addClass(d));
                  };
                  t.height() === 0 || t.css('display') === 'none'
                     ? r()
                     : t.height(0).one(s.TRANSITION_END, r).mmEmulateTransitionEnd(350);
               }
            }
         }),
         (e.setTransitioning = function (e) {
            this.transitioning = e;
         }),
         (e.dispose = function () {
            o.removeData(this.element, g),
               o(this.element)
                  .find(this.config.parentTrigger)
                  .has(this.config.subMenu)
                  .children(this.config.triggerElement)
                  .off('click'),
               (this.transitioning = null),
               (this.config = null),
               (this.element = null);
         }),
         (r.jQueryInterface = function (i) {
            return this.each(function () {
               const e = o(this);
               let n = e.data(g);
               const t = a({}, l, e.data(), typeof i === 'object' && i ? i : {});
               if ((n || ((n = new r(this, t)), e.data(g, n)), typeof i === 'string')) {
                  if (void 0 === n[i]) throw new Error(`No method named "${i}"`);
                  n[i]();
               }
            });
         }),
         r
      );
   })();
   return (
      (o.fn[e] = r.jQueryInterface),
      (o.fn[e].Constructor = r),
      (o.fn[e].noConflict = function () {
         return (o.fn[e] = t), r.jQueryInterface;
      }),
      r
   );
});
// # sourceMappingURL=metisMenu.min.js.map
